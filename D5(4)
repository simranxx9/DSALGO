/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int cnt = 0;
        ListNode *temp = head;
        while(temp!=NULL)
        {
            cnt++;
            temp = temp->next;
            
        }
        int pos = cnt - n ;
        int j =0 ;
        temp = head;
        if(cnt == 1)
            return NULL;
        else if(pos == 0)
            return temp->next;
        else{
            while(j<pos-1)
            {
                temp = temp->next;
                j++;
                cout<<temp->val<<endl;
            }
            temp->next = temp->next->next;
        }
        return head;
    }
};
